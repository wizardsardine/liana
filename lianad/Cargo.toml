[package]
name = "lianad"
version = "13.0.0"
authors = ["Antoine Poinsot <darosior@protonmail.com>"]
edition = "2018"
repository = "https://github.com/wizardsardine/liana"
license-file = "LICENCE"
keywords = ["bitcoin", "wallet", "miniscript", "inheritance", "recovery"]
description = "Liana wallet daemon"
exclude = [".github/", ".cirrus.yml", "tests/",  "test_data/", "contrib/", "pyproject.toml"]

[[bin]]
name = "lianad"
path = "src/bin/daemon.rs"

[[bin]]
name = "liana-cli"
path = "src/bin/cli.rs"

[features]
nonblocking_shutdown = []

[dependencies]
liana = { path = "../liana" }
# For managing transactions (it re-exports the bitcoin crate)
miniscript = { version = "12.0", features = ["serde", "compiler", "base64"] }

# For Electrum backend.

# We use a branch of the v1.0.0-alpha.13 tag, which corresponds to the bdk_electrum v0.15 crate,
# in order to bump the electrum_client dependency to v0.21. This allows to use the "use-rustls-ring"
# feature and avoid the default aws-ls-rs provider from rustls, which would break the reproducible build
# (see https://github.com/aws/aws-lc-rs/issues/409).
bdk_electrum = { git = "https://github.com/wizardsardine/bdk", branch = "release/1.0.0-alpha.13", default-features = false, features = [ "use-rustls-ring" ] }

# Don't reinvent the wheel
dirs = "5.0"

# We use TOML for the config, and JSON for RPC
serde = { version = "1.0", features = ["derive"] }
toml = "0.5"
serde_json = { version = "1.0", features = ["raw_value"] }

# Logging stuff
log = "0.4"
fern = "0.6"

# In order to have a backtrace on panic, because the
# stdlib does not have a programmatic interface yet
# to work with our custom panic hook.
backtrace = "0.3"

# Pinned to this version because they keep breaking their MSRV in point releases...
# FIXME: this is unfortunate, we don't receive the updates (sometimes critical) from SQLite.
rusqlite = { version = "0.30", features = ["bundled", "unlock_notify"] }

# To talk to bitcoind
jsonrpc = { version = "0.17", features = ["minreq_http"], default-features = false }

# import/export labels
bip329 = { version = "0.3.0", default-features = false }

# Payjoin
payjoin = { git = "https://github.com/payjoin/rust-payjoin.git", branch = "master", features = ["v2", "io"] }
reqwest = { version = "0.11", default-features=false, features = ["json", "rustls-tls", "stream", "blocking"] }
